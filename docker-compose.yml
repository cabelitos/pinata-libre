version: "3.7"

services:
  pinata-db:
    image: postgres:13-alpine
    container_name: pinata-db-postgres
    restart: on-failure
    secrets:
      - db-password
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
      - POSTGRES_USER=pinata-db
      - POSTGRES_DB=pinata-db
    expose:
      - '5432'
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - private
    volumes:
      - "pinata-db-data:/var/lib/postgresql/data"

  pinata-libre:
    build: .
    image: pinata-libre:latest
    networks:
      - private
    secrets:
      - db-password
      - slack-sign-secret
      - slack-client-id
      - slack-client-secret
      - slack-store-secret
    environment:
      - SLACK_SIGN_SECRET=/run/secrets/slack-sign-secret
      - SLACK_CLIENT_ID=/run/secrets/slack-client-id
      - SLACK_CLIENT_SECRET=/run/secrets/slack-client-secret
      - SLACK_STORE_SECRET=/run/secrets/slack-store-secret
      - TYPEORM_PASSWORD_FILE=/run/secrets/db-password
      - TYPEORM_CONNECTION=postgres
      - TYPEORM_PORT=5432
      - TYPEORM_USERNAME=pinata-db
      - TYPEORM_DATABASE=pinata-db
      - TYPEORM_SYNCHRONIZE=1
      - TYPEORM_HOST=pinata-db
      - TYPEORM_ENTITIES=./entities/*.js
      - TYPEORM_LOGGING=all
      - LEADERBOARD_LIMIT=10
      - SERVER_HOST=localhost
      - SERVER_PORT=80
    container_name: pinata-libre
    healthcheck:
      test: curl -f http://localhost/.well-known/server-health || exit 1
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: always
    depends_on:
      - pinata-db

networks:
  private:

volumes:
  pinata-db-data:

secrets:
  slack-client-id:
    file: .docker-secret-slack-client-id
  slack-client-secret:
    file: .docker-secret-slack-client-secret
  slack-store-secret:
    file: .docker-secret-slack-store-secret
  slack-sign-secret:
    file: .docker-secret-slack-sign-secret
  db-password:
    file: .docker-secret-db-password
